plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-parcelize'
}

android {
    namespace 'dev.nhason.nivhasonfinalproject'
    compileSdk 33

    def apiKeyFile = rootProject.file("apikeys.properties")
    def props = new Properties()
    props.load(new FileInputStream(apiKeyFile))

    defaultConfig {
        applicationId "dev.nhason.nivhasonfinalproject"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String","KEY_GOOGLE",props["KEY_GOOGLE"])
        buildConfigField("String","KEY_OPEN_WEATHER",props["KEY_OPEN_WEATHER"])
        buildConfigField("String","BASE_URL_GOOGLE",props["BASE_URL_GOOGLE"])
        buildConfigField("String","BASE_URL_OPEN_WEATHER",props["BASE_URL_OPEN_WEATHER"])
        buildConfigField("String","QUERY_PROPS_GOOGLE",props["QUERY_PROPS_GOOGLE"])
        buildConfigField("String","QUERY_PROPS_WEATHER",props["QUERY_PROPS_WEATHER"])

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    def room_version = "2.5.1"

    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor("androidx.room:room-compiler:$room_version")

    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")

    // optional - Paging 3 Integration
    implementation("androidx.room:room-paging:$room_version")

    //coroutines:
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    //coroutine extensions for room library:
    implementation "androidx.room:room-ktx:${room_version}"

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation("com.squareup.okhttp3:logging-interceptor:4.10.0")

    //picasso
    implementation 'com.squareup.picasso:picasso:2.8'

    // hilt
    implementation "com.google.dagger:hilt-android:2.44"
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    kapt "com.google.dagger:hilt-compiler:2.44"

    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

kapt {
    correctErrorTypes true
}